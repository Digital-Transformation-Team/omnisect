[project]
name = "omnisect"
version = "0.1.0"
description = ""
authors = [
    {name = "bl1nkker",email = "nurovich14@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi (>=0.115.14,<0.116.0)",
    "pyyaml (>=6.0.2,<7.0.0)",
    "dacite (>=1.9.2,<2.0.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "dishka (>=1.6.0,<2.0.0)"
]

[tool.poetry]
packages = [{include = "plugins"}]

[tool.poetry.group.tests.dependencies]
pytest-cov = "^6.2.1"


[tool.poetry.group.linter.dependencies]
ruff = "^0.12.2"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
exclude = [
    "alembic/",
    ".venv/"
]
# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B"]  # Включаем полезные правила
ignore = ["E501"]  # Отключаем правило длины строки (E501)
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"